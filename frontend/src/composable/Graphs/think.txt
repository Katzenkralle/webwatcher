
.ts

SelecedRowId -> number[]
dataUse() -> dict[]

dataUse = [{label1: value1, lable2: value2}]


chartDatasinglerowmode(dataUse)
    return 
        labels string[], 
        data number[]

chartDatarowmode(dataUse)
    return
        labels string[]
        dataset dict[]
            [{Dataset-lable -> string, data -> number[]}, {Dataset-lable -> string, data -> number[]}]


.vue


const dataUse = computed(() => {
        return graphData
    })
    
    const reformData = computed(() => {
        const label = ref([Object.keys(graphData[0])]);
        const dataList = ref([]);
        for (var element of graphData){
            const data = Object.values(element);
            dataList.value.push(data)
        }
        return {label, dataList}
    })
    


     <AccordionPanel value="1">
            <AccordionHeader>Graph</AccordionHeader>
              <AccordionContent>
                <MultiSelect 
                    v-model:model-value="selectedCols"
                    @update:model-value="(newVal)  => {console.log(newVal)}"
                    :options="computedSelectOptionsCols"
                    optionLabel="label"
                    option-value="label" 
                />
              </AccordionContent>
        </AccordionPanel>
