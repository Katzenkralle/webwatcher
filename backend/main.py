import uvicorn
from API.core import get_routes

from db_handler import MongoDbHandler, MariaDbHandler
from utility import default_logger as logger

from dotenv import dotenv_values
from fastapi import FastAPI, middleware

import os
from fastapi.routing import APIRoute
from starlette.middleware.cors import CORSMiddleware

def establish_db_connections():
    # ToDo: Think about using connection pools
    # Setup everything
    logger.info("Starting the API")
    dotenv = dotenv_values(".env")
    mongo_con_string = os.environ.get("EXTERNAL_MONGO", "")
    if mongo_con_string == "":
        logger.info("Using local mongo connection")
        mongo_con_string = dotenv["MONGO_PATH_PORT"]
    else:
        logger.info("Using external mongo connection")
    maria_con_details = [os.environ.get("EXTERNAL_MARIA", "")]
    if maria_con_details[0] == "":
        logger.info("Using local maria connection")
        maria_con_details = [dotenv["MARIA_HOST"], 
                                dotenv["MARIA_USER"], 
                                dotenv["MARIA_PASS"], 
                                dotenv["MARIA_DB"]]
    else:
        logger.info("Using external maria connection")
        maria_con_details.append(os.environ.get("MARIA_USER", ""))
        maria_con_details.append(os.environ.get("MARIA_PASS", ""))
        maria_con_details.append(os.environ.get("MARIA_DB", ""))
    return [MongoDbHandler(mongo_con_string), MariaDbHandler(*maria_con_details)]


def create_app():
    [mongo, maria] = establish_db_connections()
    app = FastAPI(
        title="Webwatcher"
    )
    # ToDo: Edit for production
    # https://fastapi.tiangolo.com/tutorial/cors/#use-corsmiddleware
    app.add_middleware(
        CORSMiddleware,
        allow_origins=["*"],
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )
    # /docs and /redoc are automatically generated by FastAPI
    app.include_router(get_routes())

    @app.middleware("http")
    async def db_connection_middleware(request, call_next):
        # Make db available for all routes under request.state
        request.state.mongo = mongo
        request.state.maria = maria
        response = await call_next(request)
        return response
    
    return app

if __name__ == "__main__":
    app = create_app()
    uvicorn.run(app, host="127.0.0.1", port=7000)